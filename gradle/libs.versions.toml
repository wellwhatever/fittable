[versions]

# SDK
minSdk = "26"
compileSdk = "34"
targetSdk = "34"

# Gradle plugins
androidGradlePlugin = "8.1.2"
firebaseGradlePlugin = "2.9.9"
gms = "4.3.15"

# AndroidX
androidCore = "1.12.0"
lifecycle = "2.6.2"

# Kotlin
kotlin = "1.9.10"
coroutines = "1.7.1"
serializationJson = "1.4.1"

# KSP
ksp = "1.9.10-1.0.13"

# Network
retrofit = "2.9.0"
retrofitSerializationConverter = "0.8.0"
okhttp = "4.11.0"

# Room
room = "2.5.2"

# Compose
composeBom = "2023.09.02"
composeCompiler = "1.5.3"
composeActivity = "1.7.2"
composeViewmodel = "2.6.2"
composeCoil = "2.4.0"
composeDestinations = "1.9.53"
composeNavigation = "2.7.3"

# Testing
junit = "4.13.2"
junitExt = "1.1.5"
mockk = "1.13.3"
testArchCore = "2.2.0"
testRunner = "1.5.2"
testRules = "1.5.0"
turbine = "0.12.1"

# Firebase
firebaseBom = "32.3.1"

# Desugaring
desugaring = "2.0.3"

[libraries]

# Build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
firebase-gradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseGradlePlugin" }
android-gms = { module = "classpath 'com.google.gms:google-services", version.ref = "gms" }

# AndroidX
androidCore = { module = "androidx.core:core-ktx", version.ref = "androidCore" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
compose-material = { module = "androidx.compose.material3:material3" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-animationGraphics = { module = "androidx.compose.animation:animation-graphics" }
compose-foundation = { module = "androidx.compose.foundation:foundation-layout" }
compose-uiTooling = { module = "androidx.compose.ui:ui-tooling" }
compose-uiUtil = { module = "androidx.compose.ui:ui-util" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewmodel" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
compose-coil = { module = "io.coil-kt:coil-compose", version.ref = "composeCoil" }

# Compose Navigation
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
compose-navigationRuntime = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "composeNavigation" }
compose-destinations = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "composeDestinations" }
compose-destinationsKsp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "composeDestinations" }

# Lifecycle
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Kotlin
kotlin-core = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }

# Testing
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk" }
testArchCore = { module = "androidx.arch.core:core-testing", version.ref = "testArchCore" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunner" }
testRules = { module = "androidx.test:rules", version.ref = "testRules" }
junit = { module = "junit:junit", version.ref = "junit" }
junitExt = { module = "androidx.test.ext:junit", version.ref = "junitExt" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Desugaring
desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaring" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-tools = { id = "com.android.tools.build.gradle", version.ref = "androidGradlePlugin" }

android-gms = { id = "com.google.gms.google-services", version.ref = "gms" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[bundles]
kotlin = [
    "kotlin-core",
    "kotlin-coroutinesCore",
    "kotlin-coroutinesAndroid",
    "kotlin-coroutinesTest"
]

compose = [
    "compose-activity",
    "compose-material",
    "compose-animation",
    "compose-animationGraphics",
    "compose-coil",
    "compose-foundation",
    "compose-lifecycle",
    "compose-viewmodel",
    "compose-uiTooling",
    "compose-uiUtil"
]

unitTesting = [
    "junit",
    "junitExt",
    "mockkAndroid",
    "testRunner",
    "testRules",
    "kotlin-coroutinesTest",
    "turbine"
]

room = ["room-runtime", "room-ktx"]
room-ksp = ["room-compiler"]
room-testing = ["room-testing"]

navigation = [
    "compose-navigation",
    "compose-destinations",
    "compose-navigationRuntime"
]

navigation-ksp = [
    "compose-destinationsKsp"
]


